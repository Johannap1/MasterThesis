#!/usr/bin/env python3
import argparse

import rospy

from std_msgs.msg import Bool

def ros_shutdown_callback():
    print("ROS shutting down")

from hovergames_simplesim_control import controller
from hovergames_simplesim_control import interfaces

if __name__ == '__main__':
    # Parse arguments
    parser = argparse.ArgumentParser()
    parser.add_argument('--dt', default='0.01', required=True, help='simulation discretization time', type=float,
                        dest='dt')
    parser.add_argument('-v', '--verbose', action='store_const', const=rospy.DEBUG, default=rospy.INFO,
                        help='print debug statements', dest='verbose')
    args = parser.parse_args(rospy.myargv()[1:])

    # Initialize ROS node
    rospy.init_node('control_node_gazebo', log_level=args.verbose)
    rospy.on_shutdown(ros_shutdown_callback)

    # Set discretization time interval [seconds]
    dt = args.dt
    rospy.loginfo(f'{rospy.get_name()} Simulation discretization time set to: {str(dt)}s')

    # Print verbosity level
    if args.verbose:
        rospy.logdebug(f'{rospy.get_name()} Verbosity turned on')

    # Initialize model simulation and send the initial state to initiate control actions
    px4_control_interface = interfaces.PX4ControlInterface()

    controller = controller.SimpleController(dt)

    rospy.spin()
    #px4_control_interface.spin_node()
    
    # Define services and clients for gazebo control interface




